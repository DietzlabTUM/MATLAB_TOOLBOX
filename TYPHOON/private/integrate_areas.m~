function [ I, areas ] = integrate_areas(img, n_areas, varargin)
% Opens an GUI to select and integrate multiple areas in an image (in cell of images/channels)
%   Input: 
%           img = cell of images (matrices) (all must have the same size), required
%           n_areas = Number of areas to integrate, required
%           option same_size: determines whether all areas will have the
%           same size (as the first area)
%           option plot_factor: weight for plotting the different channels
%           Output: 
%               I = vector/matrix of mean intensities for each area
%               areas = positions of the selected areas

    %% parse input variables
    p = inputParser;
   default_resizable = false;
   default_plot_factor = ones(1, max(size(img)));

   addRequired(p,'img',@iscell);
   addRequired(p,'n_areas',@isnumeric);

   addParameter(p,'resizable',default_resizable, @islogical);
   addParameter(p,'plot_factor',default_plot_factor, @(img_in, x) length(img_in)==length(x) ); % check that plot factor has correct size

   parse(p, img, n_areas, varargin{:});
   same_size = ~p.Results.resizable;
   plot_factor = p.Results.plot_factor;
   %%
   keyboard
%%
    % init variables
    areas = zeros(n_areas, 4);
    I = zeros(n_areas, max(size(img)));
    N_img = max(size(img));
    
    % calculate image  thah will be used to select areas
    img_show = zeros(size(img{1},1), size(img{1},2));
    for i=1:N_img
        img_show = img_show + plot_factor(i) .* img{i};
    end
    
    % select areas by hand
    cur_fig = plot_image_ui(img_show); % show image
    title('Select area')
    
    for i=1:n_areas
        % plot already selected areas
       % for j=1:i-1 
       %     rectangle('Position', areas(j,:), 'EdgeColor', 'r'); %plot all integrated areas
       %     text(areas(j, 1)+areas(j,3)/2, areas(j, 2)+areas(j,4)/2, num2str(j), 'Color', 'r', 'VerticalAlignment', 'Middle', 'HorizontalAlignment', 'Center')
        % end
        % select area
        if i==1
            h = imrect; % new area
        else
            if same_size
                h = imrect(gca, double(pos)); % new unresizeable area
                setResizable(h, 0)
            else
                h = imrect; % new area
            end
        end
        wait(h);
        pos = int32(getPosition(h)); % get position of current area[xmin ymin width height]
        delete(h)
        areas(i,:) = pos; % set output
        %integrate channels and devide by area
        for j= 1:max(size(img))
            I(i,j) = sum(sum((img{j}(pos(2):pos(2)+pos(4)  , pos(1):pos(1)+pos(3))))) ./ pos(3) ./ pos(4); %integrate
        end
        
        rectangle('Position', areas(i,:), 'EdgeColor', 'r'); %plot all integrated areas
        text(areas(i, 1)+areas(i,3)/2, areas(i, 2)+areas(i,4)/2, num2str(i), 'Color', 'r', 'VerticalAlignment', 'Middle', 'HorizontalAlignment', 'Center')

        
    end
    
    close(cur_fig)

%%
end
